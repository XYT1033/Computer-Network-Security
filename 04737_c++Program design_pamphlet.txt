


  C语言的结构变量，在C++中则称为结构对象 。 
  
  
  1. 混合型语言  
  
  
  C++ 语言以(.cpp)作为文件扩展名，有且只有一个主函数main().  
  C++保留了这个面向过程的主函数，所以称之为混合型语言。 
  
  
  
  2、 注释方式 
     /* 多行注释  */   和  // 单行注释  
	 
	 
	 
	 
	 3、 输入和输出  
	 
	 iosream.h 是I/O 流的标准头文件。 
	 
	 
	 
	 
	 C++ 预定义了4个流：cin、cout、cerr和clog .   这4个流与4个具体的输入输出设备相联接，具体的联接设备如下：
	   1、 cin 与标准输入设备相联接
	   2、 cout 与标准输出设备相联接 
	   3、 cerr 与标准错误输出设备相联接(非缓冲)
	   4、 clog 与标准错误输出设备相联接(缓冲) 
	   
	   
	   
	   在默认情况下，操作系统指定标准输出设备是显示终端，标准输入设备是键盘。而标准错误输出设备则总是显示终端。当然，可以将标准输入输出设备重定向为其他设备，比如文件等。 
	   
	   
	   4、 使用命名空间 
	   using namespace std; //使用命名空间 
	   
	   5、 对象的定义和初始化 
	     int z(0);  等价于 int z = 0; 
		 
		 
		 6、 函数原型及其返回值
		 
		 
		 
		   函数有库函数和自定义函数。使用变量规则： 必须先声明，后使用，函数也是。 
		   
		   7. const 修饰符 
		   
		    使用 const 修饰符的标识符定义是一类特殊的常量，称为符号常量，或 const 变量。 
			
			
			
			
			
			
			
			
			
			
			
			
		1. 函数重载  

同一函数定义几个版本，从而使一个函数名具有多种功能。 


 2. 数据类型 
 一、 void , C++ 增加的数据类型，无类型标识符，只能声明函数的返回值类型，不能声明变量。
二、 整数常量有4种类型： 十进制常量、长整型常量八进制常量和十六进制常量。 


3、 动态分配内存



  new 类型名[size]
  
  指针名 = new 结构名; // 分配 
  delete 指针名; //释放 
  
  
  4、 引用 
  
   引用实际就是变量的别名。
    数据类型 & 别名 = 对象名； 
	
	
	  如 ： int x=9;int &a=x; 
	  
	  
	  5、对指针使用const限定符  
	  
	  指向常量的指针： const int *p;
	  常量指针： int * const p=&x;
	  指向常量的常量指针： const int * const p =&x; 
	  
	  
    	  
	  6、数据的简单输入与输出   
	  
	  两种格式控制方式：iso_base类提供的接口；操作符的特殊函数。 
	  
	  
	  
	  
	  
	  
	  操作符及其含义： 
	  
	  
	  名称：含义：作用
	  
	  dec:设置转换基数为十进制：输入/输出 
	  oct:设置转换基数为八进制：输入/输出
	  hex:设置转换基数为十六进制：输入/输出 
	  endl:输出一个换行符并刷新流:输出
	  resetiosflags(long flag):清除flag指定的标志位:输出 
	  setiosflags(long flag):设置flag指定的标志位：输出 
	  setfill(char ch ):设置ch为填充字符: 输出 
	  setprecision(int n ):设置浮点数输出精度n :输出 
	  setw(int width ):设置输出数据字段宽度width : 输出 
	  
	  
	  
	  
	  
	  常量及其含义 
	  常量名： 含义 
	  ios_base::left  ————输出数据按输出域左边对齐输出 
	  ios_base::right ———— 输出数据按输出域右边对齐输出 
	  ios_base::showpoint   ———— 浮点输出时必须带有一个小数点 
	  ios_base::showpos   ———— 在正数前添加一个"+"号  
	  ios_base::scientific   ————   使用科学计数法表示浮点数 
	  ios_base::fixed   ————   使用定点形式表示浮点数 
	  
	  
	  程序的编辑、编译和运行的基本概念 
	  源文件中含有包含头文件的预编译语句,经过预编译后，产生翻译单元，以临时文件的形式存放于计算机之中。之后进行编译，
	  进行语法检查，产生目标文件(*.obj).此工程中的所有目标文件经过连接，产生可执行文件。连接包含c++的库函数和标准类库的连接。 
	  
	  
	  
	  
	  
	  
	  
	    结构的演化   
		
		
		1、 结构发生质的演变  
		一、 函数与数据共存  
		
		struct 结构名 
		{
			数据成员 
			成员函数 
		};
		
		访问成员方法： 结构对象，成员函数 
		默认访问权限是public类型  
		
		
		二、 封装性 
		 将数据成员使用private 关键字定义，则产生封装性 。 
		 
		2. 使用构造函数初始化的对象  
		构造函数名对象名(初始化参数);
		
		
		
		
		
		  关键字class 代替 struct ，就是一个标准的类。 
		  
		  
		  
		  
		  面向过程，不必了解计算机内部逻辑，精力集中在算法逻辑和过程。面向对象设计，进行功能和数据抽象，对象是功能和数据抽象的统一。 
		  
		  
		  
		  c++面向对象程序设计的特点：
		  1.对象 。   c++使用(对象名、属性和操作)三要素来描述对象。
		  
		  
		  
		  2.  抽象和类     。 类是具有相同的属性和操作的一组对象集合，其内部包括(属性和操作)两个主要部分。类的作用是(定义对象)。 
		   
		   类给出了属于该类的全部对象的抽象定义，而对象则是符合这种定义的实体。所以将对象称作类的一个(实例) 
		   
		   
		   
		   
		   3. 封装   将类封装起来，也是为了保护类的安全。所谓安全，就是限制使用类的属性和操作。在类中，封装是通过存取实现的，对象的
		   外部只能访问对象的共有部分，不能直接访问对象的私有部分 。 
		   
		   
		   4. 继承      继承是一个类可以获得另一个类的特性的机制，继承支持层次概念 。
		   
		   
		   
		   
		   
		   5. 多态性    
		   
		      不同的对象可以调用相同名称的函数，但可导致完全不同的行为的现象称为(多态性) 
			  
			  
			  
			  
			  
			  
			  to 3 under 
			  
			  
			  
			  
			  
			  
			  
			  
			  
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  

	  
	  
	  
	  
	  
	  
	  
	  
	
	
	
	
	
	
   
   
  







 
			
			
			
			
			
			
			
			
			
			
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 