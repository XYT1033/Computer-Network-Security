


(操作系统)是计算机系统中的一个系统软件，它是这样一些程序模块的集合： 它们能有效地组织和管理计算机系统中的硬件及软件资源，合理地
组织计算机工作流程，控制程序的执行，并向用户提供各种服务功能，使得用户能够灵活、方便、有效地使用计算机，并使整个计算机系统能高效地运行。




作为一种系统软件，操作系统有着与其他软件相比所不同的特征：
1、 并发性，是指在计算机系统中同时存在若干个运行着的程序，从宏观上看，这些程序在同时向前推进。计算机的并发性体现在两个方面：用户程序与用户程序之间并发执行；用户程序与
操作系统程序之间并发执行。

2、 共享性，是指操作系统程序与多个用户程序共用系统中的各种资源。这种共享性是在操作系统控制下实现的。资源的共享性主要针对计算机系统中的如下几项重要资源：中央处理器、内存储器、
外存储器、外部设备。在计算机系统中，对资源的共享一般有两种形式：互斥共享和同时共享。


3、 随机性 





研究操作系统的观点： 
1、 软件的观点
2、 资源管理的观点 
3、 进程的观点 
4、 虚拟器的观点 
5、 服务提供者观点 




操作系统的功能： 
 1、 进程管理(处理器管理)。进程管理主要包括进程控制、进程同步、进程间通信和调度等几方面的内容。
 
 2、 存储管理。 具体包括内存的分配与回收、存储保护和内存扩充三项存储管理功能。
 
 3、 文件管理。 文件管理的任务是有效地支持文件的存储、检索和修改等操作，解决文件的共享、保密和保护问题，以使用户方便、安全地访问文件。
 
 4、 设备管理 
 
 5、 用户接口 
 
 
 
 
 
 除此之外，操作系统还要具备中断处理、错误处理等功能。操作系统的各功能之间并非是完全独立的，它们之间存在着相互依赖的关系。
 
 
 
 
 
 
 
 
 
 
    操作系统的体系结构：
	1、 windows操作系统的体系结构。 windows体系结构是分层的模块系统，主要层次有硬件抽象层HAL、内核、执行体和大量的子系统集合。
	
	2、 UNIX 操作系统的体系结构 。 主要包括硬件、内核、系统调用接口、应用程序。 
	
	3、 Linux 操作系统的体系结构。 Linux 系统有四个主要部分，即内核、shell 、文件系统和用户应用程序。内核、shell和文件系统形成了基本的操作系统结构，它们使得
	用户可以运行程序、管理文件并使用系统。 
	
	4、 Android 操作系统的体系结构。   Android 操作系统分为4层，从高层到低层分别是应用程序层、应用框架层、系统运行库层和Linux内核层。
	
	
	
	
	  操作系统的发展过程包括：手工操作、监控程序(早期批处理)、多道批处理、分时与实时系统、UNIX通用操作系统、个人计算机操作系统、Android操作系统。
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	    操作系统分类： 按照用户界面的使用环境和功能特征的不同，一般可以把操作系统分为三种基本类型，即批处理系统、分时系统和实时系统。随着计算机体系结构的发展，
		又出现了许多类型的操作系统，它们是个人操作系统、网络操作系统、分布式操作系统和嵌入式操作系统。 
		
		
		
		
		
		
		
		
		
		 在操作系统设计的过程中主要困难有： 设计复杂程度高、正确性难以保证和研制周期长等问题。 
		 
		 
		 
		 
		 
		 操作系统的设计过程： 
		 1、 功能设计。指的是根据系统的设计目标和使用要求，确定所设计的操作系统应具备哪些功能以及操作系统的类型。
		 2、 算法设计。 指的是根据计算机的性能和操作系统的功能，来选择和设计满足系统功能的算法和策略，并分析和估算其效能。
		 3、结构设计。指的是按照系统的功能和特性要求，选择合适的结构，使用相应结构设计方法将系统逐步地分解、抽象和综合，使操作系统结构清晰、简明、可靠、易读、易修改，
		 而且使用方便，适应性强。
		 
		 
		 
		 
		 
		 操作系统的设计目标：
		 一个高质量的操作系统应具有可靠性(正确性和健壮性)、高效性、易维护性(易读性、易扩充性、易剪裁性、易修改性)、可移植性、安全性和简明性等特征。
		 
		 
		 
		 
		 
		 软件结构研究的(对象)是组成软件的各部分划分的原则以及它们之间的关系，即(软件的构成法则和组合方法)。
		 
		 
		 
		 
		 
		 
		 操作系统结构研究的目标： 
		 1、 系统模块化
		 2、 模块标准化
		 3、 通信规范化 
		 
		 
		 
		 操作系统的结构 ：
		 1、 整体式结构。我们把这种操作系统的结构称之为模块组合结构。它的主要优点是，结构紧密，接口简单直接，系统效率较高。
		 模块组合法(或称无序模块法、模块接口法等)的缺点有： 第一，模块间转接随便，各模块互相牵连，独立性差，系统结构不清晰。
		 第二，数据基本上作为全程量处理，系统内所有模块的任一程序均可对其进行存取和修改，从而造成了各模块间有着更为隐蔽的关系。
		 第三，由于模块组合结构常以大型表格为中心，为保证数据完整性，往往采用全局封中断办法，从而限制了系统的并发性。系统中实际存在的
		 并发生也未能抽象出明确的概念，缺乏鬼哥的描述办法。所以，这种结构的可适应性比较差。
		 
		 2、 层次式结构。层次式结构就是把操作系统的所有功能模块，按功能流图的调用次序，分别将这些模块排列成若干层，各层之间
		 的模块只能是单向依赖或单向调用(如只允许上层或外层模块调用下层或内层模块)关系。
		 
		 
		 3、 微内核(客户/服务器)结构。采用客户/服务器结构模式的典型操作系统有卡内基 梅隆大学研制的Mach操作系统和Windows NT 的早期版本。这种模式的优点在于，它将系统分成若干个
		 小的并且自包含的分支(服务进程),每个分支运行在独立的用户进程中，相互之间通过规范一致的方式接收发送信息而联系起来。这种体系结构的缺陷主要是对于效率的考虑。
		 
		 
		 
		 
		  处理器一般由(运算器、控制器、一系列的寄存器以及高速缓存构成)。其中运算器实现指令中的算术和逻辑运算，是计算机计算的核心。
		  
		  在处理器内通常有两类寄存器：一类称为(用户可见寄存器)；第二类称为(控制和状态寄存器)。通常用户可见寄存器对所有程序都是可用的，由机器语言直接引用。
		  它一般包括数据寄存器(Data Register)、地址寄存器(Address Register)以及条件码寄存器。
		  
		  
		  
		  
		  
		   指令执行的基本过程： 
		   最简单的处理指令方式包括两个步骤：首先，处理器每次从存储器中读取一条指令，并在取指令完成后，根据指令类别自动将程序计数器的值变成下一条指令的地址，通常是
		   自增1；其次，取到的指令被存储在处理器的指令寄存器中，处理器于是解释并执行这条指令。
		   
		   
		   
		   
		   指令大致可以分为五类：(访问存储器指令)，它们负责处理器和存储器之间的数据传送；(I/Q指令)，它们负责处理器和I/O模块之间的数据传送和命令发送；(算术逻辑指令)，
		   有时又称为数据处理指令，用以执行有关数据的算术和逻辑操作；(控制转移指令)，这种指令可以指定一个新的指令的执行起点；(处理器控制指令)，这种指令用于修改处理器状态，
		   改变处理器工作方式等。
		   
		   
		   
		   
		   特权指令和非特权指令：(特权指令)是指在指令系统中那些只能由操作系统使用的指令。这些指令是不允许一般的用户使用的。用户只能使用非特权指令。
		   
		   
		   
		   
		   管态和目态：多数系统将处理器工作状态划分为(管态和目态) 。 前者一般指操作系统管理程序运行的状态，具有较高的特权级别，又称为内核态、特权态(特态)、系统态；
		   后者一般指用户程序运行时的状态，具有较低的特权级别，又称为用户态、普通态(普态)。
		   
		   
		   
		   
		   
		   
		     处理器工作状态的转换： 
			 1、 目态到管态的转换。(其转换的唯一途径是通过中断)。中断响应时交换中断向量，新的中断向量中的PSW的处理器状态位标志为管态。
			 
			 2、管态到目态的转换。可通过设置(PSW指令)修改程序状态字，实现从操作系统向用户程序的转换。
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			   存储器的类型：在微型计算机中使用的半导体存储器有若干种不同的类型，但基本上可划分为两类：一种是(读写型的存储器)，另一种是(只读型的存储器)。
			   所谓读写型的存储器，是指可以把数据存入其中任一地址单元，并且可在以后的任何时候把数据读出来，或者重新存入新的数据的一种存储器。另一种是只读型
			   的存储器，只能从其中读取数据，但不能随意地用普通的方法向其中写入数据。通常要向其中写入数据只能用特殊的方法进行。
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   存储器的层次结构：计算机存储系统的设计主要考虑三个问题：(容量、速度和成本)。从整个系统来看，在计算机系统中的层次化的存储体系由寄存器、高速缓存、内存储器、
			   硬盘存储器、磁带机和光盘存储器等装置构成。 
			   
			   
			   
			   I/O结构：在每台外部设备中都配有各自的I/O设备控制器，由I/O设备控制器分别控制各台外部设备的运行。
			   
			   
			   
			   
			   通道是独立于中央处理器的，专门负责数据I/O传输工作的处理单元。
			   
			   DMA技术，即直接存储器访问技术，通过系统总线中的一个独立控制单元 ———— DMA 控制器，自动地控制成块数据在内存和I/O单元之间的传送。
			   
			   
			   缓冲技术是用在外部设备与其他硬件部件之间的一种数据暂存技术，它利用存储器件在外部设备中设置了数据的一个存储区域，称为(缓冲区)。
			   
			   
			   
			   时钟部件的原理：
			   在电路中的晶体振荡器，每隔一定间隔产生固定的脉冲频率，时钟电路中的时钟寄存器依据时钟电路所产生的脉冲数，对时钟寄存器进行加1的工作。
			   时钟的用户可以分为绝对时钟和相对时钟。
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   中断与异常的概念： 中断是指处理器对系统中或系统外发生的异步事件的响应。异步事件是指无一定时序关系的随机发生的事件。(中断是由外部事件引发的，而异常则是由正在执行
			   的指令引发的)。
			   
			   
			   
			   
			   
			   中断与异常的分类：  
			   
			   典型的中断包括： 
			   1、 (时钟中断)，由处理器内部的计时器产生，允许操作系统以一定规律执行函数，如时间片到时、硬件实时钟到时等。
			   2、 (输入输出(I/O)中断)，由I/O 控制器产生，用于通知一个I/O操作的正常完成或者发生的错误。
			   3、 (控制台中断)，如系统操作员通过控制台发出命令等。
			   4、 (硬件故障中断)，如掉电、存储器校验错等硬件故障引起等。
			   
			   异常发生的时间以及位置具有确定性，典型的异常包括：
			   1、 (程序性中断)，在某些条件下由指令执行结果产生，例如算术溢出、被零除、目态程序试图执行非法指令、访问不被允许访问的存储位置、虚拟存储中的缺页等。
			   
			   2、 (访管指令异常)，目的是要求操作系统提供系统服务。
			   
			   
			   
			   几种典型中断的处理：(I/O中断、时钟中断、硬件故障中断、程序性中断和系统服务请求(自愿性中断)等) 
			   
			   
			   
			   系统调用：就是用户在程序中调用操作系统所提供的一些子功能。
			   
			   系统调用的分类：
			   1、 进程控制类系统调用。
			   2、 文件操作类系统调动。
			   3、 进程通信类系统调用。
			   4、 设备管理类系统调用 
			   5、 信息维护类系统调用 
			   
			   
			   
			   
			   
			   
			   
			   程序的顺序执行的特点：
			   1、 顺序性 
			   2、 封闭性 
			   
			   
			   to  7 under 
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			 
			 
			 
			 
			 
			 
			 
			 
			 
		   
		   
		   
		   
		   
		   
		   
		   
		   
		   
		   
		   
		   
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		  
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		
		
		
		
		
		
		
		
		
		
		
	  
	  
	  
	  
	  
	  
	
	
	
	
 
 
 
   
   