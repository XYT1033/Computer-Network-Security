

java语言的前身是(Oak)语言，是美国Sun Microsystems 公司于1991年推出的，仅限于公司内部使用的语言。

java是一种功能强大的程序设计语言，既是(开发环境)，又是(应用环境)，它代表一种新的计算模式。


java语言的特点： 
1、 语法简单，功能强大，安全可靠。
2、与平台无关。
3、 解释编译两种运行方式
4、 多线程
5、 动态执行兼有丰富的API文档及类库 



(JDK)java se development kit,java语言软件开发工具包是原Sun公司提供的软件包，其中含有编写和运行java程序的所有工具，包括组成java环境的基本构件。

下载完毕，找到下载文件所在的目录，双击(jdk-8ul31-windows-x64.exe)直接运行，开始安装JDK。按照安装向导进行安装即可。

安装完成后，需要设置环境变量。环境变量设置完毕。(重启计算机)让这些设置生效。


java程序分为两种,一种是(java应用程序)java application ,另一种是(java小应用程序) java applet ,或叫java小程序。 

java 程序由类构成，含有一个main()方法，称为(主方法或主函数)。程序是通过java解释器来执行的独立程序，可以使用命令行命令直接运行。整个程序的运行入口是(main()方法)，
main()方法执行完毕，整个程序也即结束。 


一个程序可以包含一个或多个.java文件。不论文件个数有多少，其中只能有(一个)main()方法。  


源文件是(文本形式)的文件，java的执行系统是不能识别的，它必须经过编译，生成字节码的类文件后才能运行。类文件是(二进制)格式的，它有统一的格式，JVM可以识别类文件并执行它。


编译一个程序的命令格式是：
javac [选项] 源文件名 

   如果在命令行中输入javac,则系统会显示(所有选项). 这些选项都是可选的。如果源文件不在当前目录，则需要在文件名的前面加上目录。
   
   
   运行一个java程序的命令格式是： 
   java [选项] 程序名 [参数列表]
   
   java是解释器的名字，表示要运行一个由"程序名"指定的程序。程序名也就是类的名字，后面的参数列表是(可选)的。如果想向程序传送参数值，则可以把这些参数依次列在程序名的后面，
   参数个数不限。
   
   
   
   
   
   IDE是集成开发环境的缩写，这是一个提供给(开发人员)使用的程序开发环境，通常包括了(代码编辑器、编译器、调试器)和(图形用户界面)等工具。
   
   
   
   
   jdk 文档中有许多HTML文件，这些是JDK提供的应用程序编程接口(application pro-gramming interface,api)文档，可使用(浏览器)查看。api是原sun公司提供的
   使用java语言开发的类集合，用来帮助程序员开发自己的类和程序。最基本的是(java核心api) 
   
   
   
   
   
   
   
   
   
   核心api文档是按层设计的，以(主页方式)提供给用户。
   
   
   
   
   
   
   所谓(面向对象的方法学)，就是使分析、设计和实现一个系统的方法尽可能地接近人们认识一个系统的方法。通常包括3个方面：(面向对象的分析 object-oriented analysis,OOA)、(面向对象的设计
   object-oriented design,OOD)和(面向对象的程序设计 object-oriented programming, OOP )
   
   
   OOP 技术把问题看成是相互作用的事物的集合，也就是对象的集合。对象具有两个特性，一是(状态)，二是(行为)。状态是指对象本身的信息，行为是实现对对象的操作。 
   
   
   OOP 中采用了三大技术：(封装、继承和多态)。封装体现的特点是将对象的属性及实现细节隐藏起来，只给出如何使用的信息。将数据及对数据的操作捆绑在一起成为类，
   这就是(封装技术)。 
   
   
   
   
   
   
   
   
   
   
   
   在java程序中，(换行符及回车符)都可以表示一行的结束，它们可被看作是(空白)。另外，空格键、水平定位键(Tab)亦是空白。为了增加程序的可读性，java程序的元素之间可以插入任意数量的空白，
   编译器会忽略掉多余的空白。 
   
   
   java的3种注释形式： 
   1、 表示从"//"开始一直到行尾均为注释，一般用它对声明的变量、一行程序的作用进行简短说明。"//"是注释的开始，行尾表示注释结束。 
   
   2、 可用于多行注释，"/*"是注释的开始，"*/"表示注释结束， "/*" 和 "*/"表 之间的所有内容均是注释内容。这种注释多用来说明方法的功能、设计逻辑及基本思想等。
   
   3、 文档注释，以 "/**"开头，以"*/"结束。一般地，在公有类定义或公有方法头的前面会使用这样的注释。 
   
   
   
   (语句)是java程序的最小执行单位，程序的各语句间以分号";"分隔。 
   
   java语言定义了许多关键字，关键字也称为(保留字)。 
   
   
   在java语言中，(标识符)是由字母、数字、下划线(_)或美元符%组成的字符串，其中(数字)不能作为标识符的开头。标识符区分大小写，长度没有限制。除以上所列几项之外，
   标识符中不能含有其他符号，例如+、=、*及%等，当然也不允许插入空白。在程序中，标识符可用作变量名、方法名、接口名和类名等。 
   
   
   
    java的数据类型共分为两大类，一类是(基本数据类型)，另一类是(复合数据类型)。基本数据类型共有8种，分为4小类，分别是(整型、浮点型和布尔型)。整型和浮点型有时也合称为数值型。复合数据
	类型包括(数组、类和接口)。其中，数组是一个很特殊的概念，它是对象，而不是一个类，一般地把它归为复合数据类型。
	
	
	java语言提供了(4种)整型量，对应的关键字分别是：byte、short、int和long .      
	
	
	
	 数据类型   	: 整数长度 : 字节数   : 表示范围
	 byte           : 8位       ： 1       ： -2^7~2^7-1  (-128~127)
	 short           : 16位      ： 2      ： -2^15~2^15-1  (-32768~32767)
	 int            : 32位       ： 4      ：  -2^31~2^31-1  
	 long            : 64位        ： 8    ：     -2^63~2^63-1  
	 
	 
	 
	 
	  整型量可用十进制、八进制或十六进制形式表示，以(1~9)开头的数为十进制数，以(0)开头的数为八进制数，以(0x或0X)开头的数为十六进制数。 
	  
	  
	  
	  java浮点数类型遵从标准的浮点规则。浮点数类型有两种：一种是(单精度浮点数)，用float关键字说明；另一种是(双精度浮点数),用double关键字说明，它们都是有符号数。
	  
	  
	  
	  单个字符用(char)类型表示。一个char表示一个Unicode字符，其值用(16位)无符号整数表示，范围为0~65535。char 类型的常量值必须用一对单引号('')括起来，分为
	  (普通字符常量)和(转义字符常量)两种。 
	  
	  
	  
	   逻辑值有两个状态，它们常被写作on 和off、true 和 false 、yes 和 no 等。在java中，这样的一个值用boolean（布尔）类型表示，布尔类型也称作(逻辑类型)。
	   boolean类型有两个常量值：true 和 false ，它们全是小写，计算机内部使用(8位二进制数)表示。 
	   
	   
	   
	   
	   表达式由(运算符)和(操作数)组成，对操作数进行运算符指定的操作，并得出运算结果。 
	   
	   
	   常量操作数很简单，只有(简单数据类型)和(String类型)才有相应的常量形式。
	   
	   
	   
	   
	   
	   
	    变量是存储数据的基本单元，它可以用作表达式中的操作数。变量在使用之前要先声明。变量声明的基本格式为： 
		类型   变量名1   [=初值1][,变量名2[=初值2]]...;
		其中，类型是变量所属的类型，既可以是简单数据类型，如int和float等，又可以是类类型。有时也把类类型的变量称为引用。方括号
		中的初值是可选的。如果没有，则表明仅是声明了一个变量，否则是在声明变量的同时，给变量赋了初值，称为对变量进行了初始化。 
		
		
		具有null值的引用不指向任何对象。如果使用它指向的对象，则将导致(一个异常)。异常是程序运行时发生的一个错误。
		
		
		(变量的作用域)是指可访问该变量的代码范围。类中定义的成员变量的作用域是整个类。 方法中定义的局部变量的作用域是从该变量的声明处开始到包含该声明的语句块结束处，
		快外是不可使用的。 
		
		
		
		
		1、 (算术运算符)。算术运算符包括通常的加(+)、减(-)、乘(*)、除(/)、取模(%),完成整型和浮点型数据的算术运算。许多语言中的取模运算只能用于整型数，java对此有所扩展，它允许对
		浮点数进行取模操作。 
		
		
		2、 (关系运算符). 关系运算符用来比较两个值，包括大于
		
		
		
		to  4 middle 
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	
	
	
	
	
	
	
	
	
	
	
	
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   